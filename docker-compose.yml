version: "3.4"
services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    command:
      - "--api"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}" 
      - "--certificatesresolvers.myresolver.acme.storage=acme.json"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CONFIGROOT}/traefik/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.traefik.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-rtr.entrypoints=websecure"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik-rtr.tls=true"
      - "traefik.http.routers.traefik-rtr.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      - "traefik.http.routers.traefik-rtr.middlewares=auth"
      - "traefik.http.services.traefik-rtr.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.auth.forwardauth.address=https://${DOMAIN}/api/v2/auth?group=1"

  organizr:
    container_name: organizr
    image: organizr/organizr:latest
    restart: always
    ports:
      - 8081:8081
    volumes:
      - ${CONFIGROOT}/organizr:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=022
      - TZ=${TZ}
      - fpm=true
      - branch=v2-develop
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.organizr.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.organizr.entrypoints=websecure"
      - "traefik.http.routers.organizr.tls.certresolver=myresolver"

  transmission-openvpn:
    container_name: transmission
    image: haugene/transmission-openvpn
    restart: always
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"
    cap_add:
      - NET_ADMIN
    volumes:
      - ${MEDIAROOT}/downloads:/data
    environment:
      - OPENVPN_PROVIDER=MULLVAD
      - OPENVPN_CONFIG=hk_all
      - OPENVPN_USERNAME=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - LOCAL_NETWORK=${LAN_NETWORK}
    ports:
      - '9091:9091'
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
      - "traefik.http.routers.transmission.entrypoints=websecure"
      - "traefik.http.routers.transmission.tls.certresolver=myresolver"
      - "traefik.http.routers.transmission.rule=Host(`torrent.${DOMAIN}`)"
      - "traefik.http.routers.transmission.middlewares=auth"

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    depends_on:
      - traefik
      - organizr
    restart: always
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${MEDIAROOT}/downloads/torrent-blackhole:/media/downloads
      - ${CONFIGROOT}/jackett:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)"
      - "traefik.http.routers.jackett.entrypoints=websecure"
      - "traefik.http.routers.jackett.tls.certresolver=myresolver"
      - "traefik.http.routers.jackett.middlewares=auth"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:preview
    depends_on:
      - traefik
      - organizr
    restart: always
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${CONFIGROOT}/sonarr:/config
      - ${MEDIAROOT}:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.routers.sonarr.middlewares=auth"

  radarr:
    container_name: radarr
    image: linuxserver/radarr:nightly
    depends_on:
      - traefik
      - organizr
    restart: always
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${CONFIGROOT}/radarr:/config
      - ${MEDIAROOT}:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.routers.radarr.middlewares=auth"

  nextcloud:
    container_name: nextcloud
    build:
      context: ./nextcloud
    restart: always
    ports:
      - 8082:80
    depends_on:
      - db
      - redis
    environment:
      - MYSQL_HOST=db
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - REDIS_HOST=redis
      - NEXTCLOUD_TRUSTED_DOMAINS=${DOMAIN}
    volumes:
      - ${MEDIAROOT}/nextcloud:/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`nc.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"
      - "traefik.http.routers.nextcloud.middlewares=cloud_headers,cloud_redirectregex"
      - "traefik.http.middlewares.nextcloud.headers.customFrameOptionsValue=ALLOW-FROM https://${DOMAIN}"
      - "traefik.http.middlewares.nextcloud.headers.contentSecurityPolicy=frame-ancestors 'self' ${DOMAIN}"
      - "traefik.http.middlewares.cloud_headers.headers.framedeny=true"
      - "traefik.http.middlewares.cloud_headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.cloud_headers.headers.stsPreload=true"
      - "traefik.http.middlewares.cloud_headers.headers.stsSeconds=15552001"
      - "traefik.http.middlewares.cloud_redirectregex.redirectregex.regex=/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.cloud_redirectregex.redirectregex.replacement=/remote.php/dav/"

  pp-1:
    container_name: pp-1
    image: photoprism/photoprism:latest
    restart: always
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - 2342:2342
    healthcheck:
      test: ["CMD", "photoprism", "status"]
      interval: 60s
      timeout: 15s
      retries: 5
    environment:
      PHOTOPRISM_DEBUG: "true"
      PHOTOPRISM_ADMIN_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD}
      PHOTOPRISM_PUBLIC: "false"
      PHOTOPRISM_SITE_URL: "https://pp-1.${DOMAIN}/"
      PHOTOPRISM_HTTP_PORT: 2342
      PHOTOPRISM_DATABASE_DRIVER: "mysql"
      PHOTOPRISM_DATABASE_DSN: "photoprism:${PHOTOPRISM_DATABASE_PASS}@tcp(db:3306)/pp_1?charset=utf8mb4,utf8&parseTime=true"
      UID: ${PUID}
      GID: ${PGID}
    volumes:
      - ${CONFIGROOT}/pp-1:/photoprism/storage
      - ${MEDIAROOT}/nextcloud/data/mesnigan/files/Photos:/photoprism/originals
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pp-1.loadbalancer.server.port=2342"
      - "traefik.http.routers.pp-1.entrypoints=websecure"
      - "traefik.http.routers.pp-1.tls.certresolver=myresolver"
      - "traefik.http.routers.pp-1.rule=Host(`pp-1.${DOMAIN}`)"

  pp-2:
    container_name: pp-2
    image: photoprism/photoprism:latest
    restart: always
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - 2343:2343
    healthcheck:
      test: ["CMD", "photoprism", "status"]
      interval: 60s
      timeout: 15s
      retries: 5
    environment:
      PHOTOPRISM_DEBUG: "true"
      PHOTOPRISM_ADMIN_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD}
      PHOTOPRISM_PUBLIC: "false"
      PHOTOPRISM_SITE_URL: "https://pp-2.${DOMAIN}/"
      PHOTOPRISM_HTTP_PORT: 2343
      PHOTOPRISM_DATABASE_DRIVER: "mysql"
      PHOTOPRISM_DATABASE_DSN: "photoprism:${PHOTOPRISM_DATABASE_PASS}@tcp(db:3306)/pp_2?charset=utf8mb4,utf8&parseTime=true"
      UID: ${PUID}
      GID: ${PGID}
    volumes:
      - ${CONFIGROOT}/pp-2:/photoprism/storage
      - ${MEDIAROOT}/photos/jimmy:/photoprism/originals
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pp-2.loadbalancer.server.port=2343"
      - "traefik.http.routers.pp-2.entrypoints=websecure"
      - "traefik.http.routers.pp-2.tls.certresolver=myresolver"
      - "traefik.http.routers.pp-2.rule=Host(`pp-2.${DOMAIN}`)"

  db:
    container_name: db
    restart: always
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ${CONFIGROOT}/db/mariadb:/var/lib/mysql

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    volumes:
      - ${CONFIGROOT}/db/redis:/data


